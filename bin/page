#!/bin/sh
# page
# Display file in pages

sttysave=$(stty --save <&2)
# 'stty rows' is not portable (not in POSIX)
rows=$(stty size <&2)
rows=${rows% *}
pagelen=$(($rows - 1))

atexit () {
    stty "$sttysave" <&2
}

trap atexit EXIT
trap 'exit 99' INT QUIT TERM

stty -icanon min 1 -echo -echonl <&2

inkey () {
    dd 2>&- bs=1 count=1
}

Clear () {
    # Clear the current line by CR Space CR
    printf '\r \r'
}

Prompt () {
    printf '%s' ":$1"
    case $(inkey <&2) in
        ' ') Clear; return;;
        'q') exit;;
    esac
}

# number of lines output since prompt
l=0

while read -r a || test -n "$a"
do
    # Output a line (stored without trailing newline in $a).
    # Checking before output if we need a prompt, which avoids
    # printing an extra prompt when the file is an exact multiple
    # of the page size.
    # Use the global variable $l to keep track of the number of
    # lines that have been output.
    if [ $l -eq "$pagelen" ]
    then
        Prompt
        l=0
    fi
    printf '%s\n' "$a"
    l=$((l+1))
done
Prompt eof
